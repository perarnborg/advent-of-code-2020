(() => {
  const mapPattern

  const doNTimes = n => fn => {
    if (n > 0) {
      fn()
      doNTimes(n - 1) (fn)
    }
  }

  const spreadMap = (stepsX, stepsY) => {
    if (!mapPattern.length) {
      return mapPattern
    }
    const mapPatternWidth = mapPattern[0].length
    const widthHeightRatio = stepsX / stepsY
    const fullMapWidth = mapPattern.length * widthHeightRatio
    return mapPattern.map(patternRow => {
      let row = ''
      doNTimes(Math.ceil(fullMapWidth / mapPatternWidth))(() => row += patternRow)
      return row
    })
  }

  const getPositions = (stepsX, stepsY) => {
    const positions = [{ x: 0, y: 0 }]
    while (positions[positions.length - 1].y + stepsY <= mapPattern.length) {
      positions.push({ x: positions[positions.length - 1].x + stepsX, y: positions[positions.length - 1].y + stepsY })
    }
    return positions
  }

  const countTrees = (stepsX, stepsY) => {
    const fullMap = spreadMap(stepsX, stepsY)

    return getPositions(stepsX, stepsY).map(position => {
      return fullMap.length > position.y ? fullMap[position.y].split('')[position.x] : '-'
    }).filter(character => character === '#').length
  }

  const first = countTrees(3, 1)

  const second = countTrees(1, 1) * countTrees(3, 1) * countTrees(5, 1) * countTrees(7, 1) * countTrees(1, 2)

  show(3, first, second)
})()
